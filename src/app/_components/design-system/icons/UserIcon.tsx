import { useAtom } from "jotai";
import { PropsWithChildren } from "react";
import { useThemeAtom } from "~/app/dashboard/atoms";

function SVG({ children }: PropsWithChildren) {
  return (
    <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 110 110">
      {children}
    </svg>
  );
}

function Background({ fill = "white" }: { fill?: "white" | "black" }) {
  return <path d="M 0 0 H 110 V 110 H 0 Z" fill={fill} />;
}

function OuterCircle({ fill = "white" }: { fill?: "white" | "black" }) {
  const stroke = fill === "white" ? "black" : "white";
  return (
    <g id="outer-circle">
      <circle
        cx="55"
        cy="55"
        r="50"
        fill={fill}
        stroke={stroke}
        strokeWidth="6"
      />
    </g>
  );
}

function Body({
  isInHelmet,
  stroke = "black",
}: {
  isInHelmet: boolean;
  stroke?: "black" | "white";
}) {
  return (
    <g id="body">
      <path
        d="M 55,105 Q 80 105 95,85 Q 90 63 60,60 H 50 Q 20 63 15,85 Q 30 105 55,105"
        fill={isInHelmet ? "none" : stroke}
        stroke={stroke}
        strokeWidth={isInHelmet ? "6" : "8"}
        transform="translate(0, -2)"
      />
    </g>
  );
}

function Head({
  isInHelmet = false,
  fill = "black",
  stroke = "white",
}: {
  isInHelmet?: boolean;
  fill?: "black" | "white";
  stroke?: "black" | "white";
}) {
  return (
    <g id="head">
      <circle
        cx="55"
        cy={isInHelmet ? "60" : "44"}
        r="30"
        fill={isInHelmet ? stroke : fill}
        stroke={isInHelmet ? stroke : "none"}
        strokeWidth="5"
      />
    </g>
  );
}

function Helmet({ fill = "black" }: { fill?: "black" | "white" }) {
  return (
    <g
      stroke={fill}
      strokeWidth="4"
      fill={fill}
      transform="translate(48.5,86) scale(0.35)"
    >
      <path d="M0,0 c-26.757,-2.467 -49.687,-20.881 -57.628,-46.973l-15.684,-51.531c-0.356,-1.17 -0.18,-2.438 0.482,-3.467c0.661,-1.029 1.741,-1.715 2.954,-1.877l59.448,-7.926c1.584,-5.085 6.329,-8.777 11.936,-8.777l4.166,0l0,-78.233c-40.072,6.038 -70.833,40.655 -70.833,82.4c0,2.3 -1.867,4.167 -4.167,4.167c-2.299,-0 -4.166,-1.867 -4.166,-4.167c-0,-50.592 41.074,-91.667 91.666,-91.667c50.593,0 91.667,41.075 91.667,91.667c0,2.3 -1.867,4.167 -4.167,4.167c-2.299,-0 -4.166,-1.867 -4.166,-4.167c-0,-41.745 -30.762,-76.362 -70.834,-82.4l0,78.233l4.167,0c5.607,0 10.352,3.692 11.936,8.777l59.448,7.926c1.212,0.162 2.293,0.848 2.954,1.877c0.662,1.029 0.838,2.297 0.481,3.467l-15.683,51.531c-7.941,26.092 -30.871,44.506 -57.629,46.973c-0.733,0.286 -1.554,0.367 -2.38,0.19c-0.016,-0.003 -0.032,-0.007 -0.048,-0.011c-1.234,0.069 -2.474,0.104 -3.721,0.104l-24.049,-0c-1.247,-0 -2.488,-0.035 -3.721,-0.104c-0.016,0.004 -0.032,0.008 -0.048,0.011c-0.826,0.177 -1.648,0.096 -2.381,-0.19Zm-43.189,-98.999l-20.722,2.763l5.486,18.024l9.756,3.594c-1.711,-7.604 -0.313,-15.612 3.94,-22.213c0.482,-0.749 0.996,-1.472 1.54,-2.168Zm-12.192,30.789l5.725,18.811c1.314,4.317 3.097,8.394 5.283,12.182c0.02,-0 0.041,-0 0.062,-0l1.259,-0c1.319,-0 2.56,-0.625 3.346,-1.684c0.786,-1.058 1.024,-2.427 0.642,-3.689l-6.673,-22.067l-9.644,-3.553Zm16.307,38.676c8.793,10.786 21.278,18.207 35.244,20.627l-9.379,-43.767c-0.15,-0.054 -0.3,-0.109 -0.45,-0.165l-22.28,-8.208l4.852,16.045c1.145,3.786 0.43,7.892 -1.928,11.068c-1.542,2.077 -3.667,3.597 -6.059,4.4Zm28.971,-73.876l-12.843,1.712c-6.063,0.809 -11.465,4.238 -14.778,9.38c-0.449,0.697 -0.854,1.416 -1.213,2.153l0.868,0.217c6.953,1.738 14.196,1.974 21.247,0.692l24.487,-4.452c6.949,-1.264 14.069,-1.264 21.019,-0l31.56,5.738c2.389,0.434 4.843,0.354 7.199,-0.235l7.843,-1.96c-0.36,-0.737 -0.764,-1.456 -1.214,-2.153c-3.312,-5.142 -8.715,-8.571 -14.778,-9.38c-0.005,-0 -12.843,-1.712 -12.843,-1.712c-1.842,4.606 -6.346,7.859 -11.61,7.859l-33.333,0c-5.264,0 -9.768,-3.253 -11.611,-7.859Zm44.944,-8.807l-33.334,-0c-2.301,-0 -4.166,1.865 -4.166,4.167c0.001,2.302 1.866,4.166 4.167,4.166l33.333,-0c2.3,-0 4.164,-1.863 4.166,-4.162c0,-0.002 0,-0.003 0,-0.005c0,-2.301 -1.865,-4.166 -4.166,-4.166Zm-20.833,-87.398l-0,79.064l8.333,0l0,-79.064c-1.38,-0.068 -2.77,-0.102 -4.167,-0.102c-1.397,-0 -2.786,0.034 -4.166,0.102Zm26.171,190.708c13.966,-2.42 26.45,-9.841 35.244,-20.627c-2.392,-0.803 -4.518,-2.323 -6.059,-4.4c-2.358,-3.176 -3.073,-7.282 -1.928,-11.068l4.852,-16.045l-22.28,8.208c-0.15,0.056 -0.3,0.111 -0.451,0.165l-9.378,43.767Zm40.543,-28.31c2.186,-3.788 3.969,-7.865 5.283,-12.183l5.725,-18.81l-9.644,3.553l-6.674,22.067c-0.381,1.262 -0.143,2.631 0.643,3.689c0.786,1.059 2.027,1.684 3.346,1.684l1.259,-0c0.021,-0 0.041,-0 0.062,-0Zm14.052,-40.995l5.485,-18.024l-20.721,-2.763c0.544,0.696 1.058,1.419 1.54,2.168c4.253,6.601 5.651,14.609 3.94,22.213l9.756,-3.594Zm-89.901,70.147c0.425,0.01 0.85,0.014 1.277,0.014l24.049,0c0.426,0 0.852,-0.004 1.277,-0.014l8.963,-41.828c-14.618,3.643 -29.911,3.643 -44.529,0l8.963,41.828Zm-45.893,-74.031c-0.122,2.376 0.161,4.782 0.866,7.111l1.192,3.944l23.803,8.769c0.023,-1.902 1.356,-3.604 3.294,-4.02c2.248,-0.481 4.465,0.953 4.947,3.202l0.86,4.014c15.8,4.776 32.665,4.776 48.465,-0l0.86,-4.014c0.482,-2.249 2.698,-3.683 4.947,-3.202c1.937,0.416 3.27,2.118 3.294,4.02l23.802,-8.769l1.193,-3.944c0.704,-2.329 0.988,-4.735 0.865,-7.111l-7.904,1.976c-3.505,0.876 -7.156,0.995 -10.711,0.349l-31.56,-5.738c-5.964,-1.085 -12.074,-1.085 -18.037,-0l-24.488,4.452c-8.216,1.494 -16.656,1.219 -24.758,-0.807l-0.93,-0.232Z" />
    </g>
  );
}

export default function UserIcon({ isBaller = false }: { isBaller?: boolean }) {
  const [theme] = useAtom(useThemeAtom);
  const bg = theme === "light" ? "white" : "black";
  const color = theme === "light" ? "black" : "white";

  return (
    <SVG>
      {/* <Background fill={bg} /> */}
      <OuterCircle fill={bg} />
      <Body isInHelmet={isBaller} stroke={color} />
      <Head isInHelmet={isBaller} fill={color} stroke={bg} />
      {isBaller && <Helmet fill={color} />}
    </SVG>
  );
}
